How did viewing a diff between two versions of a file help you see the bug that was introduced?
- Bugs can be easily be identified by look at different version of two files. Both FC in windows
  and diff in linux layout the differences between two files in a quite readable fashion.
  It shows which line of code has been modified with respect to one another, so one can easily 
  point out the typo kind of error which is quite obivious in programming environment.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
- First of all, it will help me to look at how the programm was progressed bit by bit. Entire history view will help me 
  modify the code easily if we want some algorithm to be changed. It will also help to restore the file to previous
  version if current version doesn't work out well.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google docs does?
- Manually choosing when to commit a change gives us more flexibity. One can do one commit per logical change and we 
  should never do too much work without committing.
  Automatically saving as in google doc gives you more unusable versions of a file that might not be useful.
  
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs,
treat each file separately?
- In Git, there is a repository containing multiple files which are connected and required to function properly. On a commit a version of
  every file in the repository is saved. As git is mainly used for saving projects having multiple file codes, we need to have version
  control system that allows saving multiple files in one commmit. While Google Docs is maily used for spreadsheet and excel files 
  which are not connected to eachother and its good if it doesn't allow saving multiple files in one commit.

How can you use the commands git log and git diff to view the history of files?
- git log displays all the history of commits made so far along with time, date and commit msgs. First we need to go into a repository
  and then write git log.
  git diff helps to compare too commits in really good layout. We can use the commmand git diff old_commit new_commit. It will
  display the deleted lines and added lines with - and + sign respectively.

How might using version control make you more confident to make changes that could break something?
- As through git checkout commit_id, we can restore back to any versions of file its make a user very 
  confident about playing with the codes. We can also jump to the recent versions. We can find the 
  exact commit that introduces the bug and then using git diff we can find the exact line of 
  code that introduces the bug.

Now that you have your workspace set up, what do you want to try using Git for?
- I'm gonna use git for all of mr projects, its too useful.   

